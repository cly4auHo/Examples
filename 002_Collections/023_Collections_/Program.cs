using System;
using System.Collections;

/// <summary>
/// Hashtable
/// Класс Hashtable предназначен для создания коллекции, 
/// в которой для хранения ее элементов служит хеш-таблица.
/// Информация сохраняется в хеш-таблице с помощью механизма, называемого хешированием. 
/// При хешировании для определения уникального значения, называемого хеш-кодом,
/// используется информационное содержимое специального ключа. Полученный в итоге 
/// хеш-код служит в качестве индекса, по которому в таблице хранятся искомые данные, 
/// соответствующие заданному ключу. Преобразование ключа в хеш-код выполняется автоматически, 
/// и поэтому сам хеш-код вообще недоступен пользователю. Преимущество хеширования заключается в том,
/// что оно обеспечивает постоянство времени выполнения операций поиска, извлечения и установки 
/// значений независимо от величины массивов данных.
/// </summary>
namespace _023_Collections_
{
    class Program
    {
        static void Main()
        {
            // Hashtable - Представляет коллекцию пар «ключ-значение», которые упорядочены по хэш-коду ключа.
            Hashtable hashtable = new Hashtable();

            // Метод Add принимает в качестве первого параметра ключ,
            // а в качестве второго - значение
            hashtable.Add("sbishop@contoso.com", "Bishop, Scott");

            // Невозможно добавить элемент с уже имеющимся в хэш-таблице ключом.
            // hashtable.Add("sbishop@contoso.com", "Bishop, Scott2");

            // Особенности использования индексаторов.

            // Использование индексатора эквивалентно вызову Add, 
            // если такого индекса не существует.
            hashtable["s.bishop@contoso.com"] = "Bishop, Scott";

            // Если такой индекс существует, то происходит только замена значения.
            hashtable["sbishop@contoso.com"] = "-------------";

            Console.WriteLine(hashtable["sbishop@contoso.com"]);
            Console.WriteLine(hashtable["s.bishop@contoso.com"]);

            // Задержка.
            Console.ReadKey();
        }
    }
}
