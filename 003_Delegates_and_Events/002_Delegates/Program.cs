using System;

/// <summary>
/// Делегат 
/// Делегаты представляют такие объекты, которые указывают на методы. То есть 
/// делегаты - это указатели на методы и с помощью делегатов мы можем вызвать данные методы.
/// </summary>
namespace _002_Delegates
{
    /// <summary>
    /// Создаем класс делегата. (1) 
    /// Для объявления делегата используется ключевое слово delegate,
    /// после которого идет возвращаемый тип, название и параметры.
    /// Класс-делегата с именем MyDelegate,
    /// метод, который будет сообщен с экземпляром данного класса-делегата, 
    /// не будет ничего принимать и не будет ничего возвращать.
    /// </summary>
    public delegate void MyDelegate();
    class Program
    {
        static void Main()
        {
            // Создание экземпляра класса MyClass
            MyClass myClass = new MyClass();

            // Создаем экземпляр делегата. (2)
            MyDelegate myDelegate = new MyDelegate(myClass.Method);

            // Вызываем метод сообщенный с делегатом. (3)
            myDelegate.Invoke();

            // Другой способ вызова метода сообщенного с делегатом. (3')
            myDelegate();

            // Задержка.
            Console.ReadKey();
        }
    }

    /// <summary>
    /// Класс, метод которого будет сообщен с делегатом.
    /// </summary>
    class MyClass
    {
        /// <summary>
        /// Создаем метод, который планируем сообщить с делегатом.
        /// </summary>
        public void Method()
        {
            Console.WriteLine("Строку вывел метод сообщенный с делегатом.");
        }
    }
}
